// Code generated from internal/parser/config/Config.g4 by ANTLR 4.7.1. DO NOT EDIT.

package config

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 23, 195,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 3, 2, 3, 2, 3, 2, 3, 2,
	3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5,
	3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 8,
	3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3,
	10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15,
	3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3,
	19, 7, 19, 136, 10, 19, 12, 19, 14, 19, 139, 11, 19, 3, 20, 3, 20, 3, 20,
	7, 20, 144, 10, 20, 12, 20, 14, 20, 147, 11, 20, 3, 21, 3, 21, 3, 22, 3,
	22, 3, 23, 6, 23, 154, 10, 23, 13, 23, 14, 23, 155, 3, 23, 3, 23, 3, 24,
	5, 24, 161, 10, 24, 3, 24, 3, 24, 6, 24, 165, 10, 24, 13, 24, 14, 24, 166,
	3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 7, 25, 175, 10, 25, 12, 25, 14,
	25, 178, 11, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26,
	3, 26, 7, 26, 189, 10, 26, 12, 26, 14, 26, 192, 11, 26, 3, 26, 3, 26, 3,
	176, 2, 27, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11,
	21, 12, 23, 13, 25, 14, 27, 2, 29, 2, 31, 2, 33, 2, 35, 15, 37, 16, 39,
	17, 41, 18, 43, 19, 45, 20, 47, 21, 49, 22, 51, 23, 3, 2, 8, 3, 2, 67,
	92, 4, 2, 97, 97, 99, 124, 5, 2, 67, 92, 97, 97, 99, 124, 3, 2, 50, 59,
	5, 2, 11, 11, 14, 14, 34, 34, 4, 2, 12, 12, 15, 15, 2, 200, 2, 3, 3, 2,
	2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2,
	2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3,
	2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 35,
	3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2,
	43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2,
	2, 51, 3, 2, 2, 2, 3, 53, 3, 2, 2, 2, 5, 61, 3, 2, 2, 2, 7, 63, 3, 2, 2,
	2, 9, 65, 3, 2, 2, 2, 11, 72, 3, 2, 2, 2, 13, 77, 3, 2, 2, 2, 15, 80, 3,
	2, 2, 2, 17, 84, 3, 2, 2, 2, 19, 90, 3, 2, 2, 2, 21, 97, 3, 2, 2, 2, 23,
	102, 3, 2, 2, 2, 25, 111, 3, 2, 2, 2, 27, 120, 3, 2, 2, 2, 29, 122, 3,
	2, 2, 2, 31, 124, 3, 2, 2, 2, 33, 126, 3, 2, 2, 2, 35, 128, 3, 2, 2, 2,
	37, 132, 3, 2, 2, 2, 39, 140, 3, 2, 2, 2, 41, 148, 3, 2, 2, 2, 43, 150,
	3, 2, 2, 2, 45, 153, 3, 2, 2, 2, 47, 164, 3, 2, 2, 2, 49, 170, 3, 2, 2,
	2, 51, 184, 3, 2, 2, 2, 53, 54, 7, 113, 2, 2, 54, 55, 7, 114, 2, 2, 55,
	56, 7, 118, 2, 2, 56, 57, 7, 107, 2, 2, 57, 58, 7, 113, 2, 2, 58, 59, 7,
	112, 2, 2, 59, 60, 7, 117, 2, 2, 60, 4, 3, 2, 2, 2, 61, 62, 7, 125, 2,
	2, 62, 6, 3, 2, 2, 2, 63, 64, 7, 127, 2, 2, 64, 8, 3, 2, 2, 2, 65, 66,
	7, 117, 2, 2, 66, 67, 7, 101, 2, 2, 67, 68, 7, 106, 2, 2, 68, 69, 7, 103,
	2, 2, 69, 70, 7, 111, 2, 2, 70, 71, 7, 99, 2, 2, 71, 10, 3, 2, 2, 2, 72,
	73, 7, 118, 2, 2, 73, 74, 7, 123, 2, 2, 74, 75, 7, 114, 2, 2, 75, 76, 7,
	103, 2, 2, 76, 12, 3, 2, 2, 2, 77, 78, 7, 75, 2, 2, 78, 79, 7, 70, 2, 2,
	79, 14, 3, 2, 2, 2, 80, 81, 7, 107, 2, 2, 81, 82, 7, 112, 2, 2, 82, 83,
	7, 118, 2, 2, 83, 16, 3, 2, 2, 2, 84, 85, 7, 104, 2, 2, 85, 86, 7, 110,
	2, 2, 86, 87, 7, 113, 2, 2, 87, 88, 7, 99, 2, 2, 88, 89, 7, 118, 2, 2,
	89, 18, 3, 2, 2, 2, 90, 91, 7, 117, 2, 2, 91, 92, 7, 118, 2, 2, 92, 93,
	7, 116, 2, 2, 93, 94, 7, 107, 2, 2, 94, 95, 7, 112, 2, 2, 95, 96, 7, 105,
	2, 2, 96, 20, 3, 2, 2, 2, 97, 98, 7, 100, 2, 2, 98, 99, 7, 113, 2, 2, 99,
	100, 7, 113, 2, 2, 100, 101, 7, 110, 2, 2, 101, 22, 3, 2, 2, 2, 102, 103,
	7, 102, 2, 2, 103, 104, 7, 99, 2, 2, 104, 105, 7, 118, 2, 2, 105, 106,
	7, 103, 2, 2, 106, 107, 7, 118, 2, 2, 107, 108, 7, 107, 2, 2, 108, 109,
	7, 111, 2, 2, 109, 110, 7, 103, 2, 2, 110, 24, 3, 2, 2, 2, 111, 112, 7,
	105, 2, 2, 112, 113, 7, 103, 2, 2, 113, 114, 7, 113, 2, 2, 114, 115, 7,
	114, 2, 2, 115, 116, 7, 113, 2, 2, 116, 117, 7, 107, 2, 2, 117, 118, 7,
	112, 2, 2, 118, 119, 7, 118, 2, 2, 119, 26, 3, 2, 2, 2, 120, 121, 9, 2,
	2, 2, 121, 28, 3, 2, 2, 2, 122, 123, 9, 3, 2, 2, 123, 30, 3, 2, 2, 2, 124,
	125, 9, 4, 2, 2, 125, 32, 3, 2, 2, 2, 126, 127, 9, 5, 2, 2, 127, 34, 3,
	2, 2, 2, 128, 129, 5, 41, 21, 2, 129, 130, 5, 37, 19, 2, 130, 131, 5, 43,
	22, 2, 131, 36, 3, 2, 2, 2, 132, 137, 5, 27, 14, 2, 133, 136, 5, 31, 16,
	2, 134, 136, 5, 33, 17, 2, 135, 133, 3, 2, 2, 2, 135, 134, 3, 2, 2, 2,
	136, 139, 3, 2, 2, 2, 137, 135, 3, 2, 2, 2, 137, 138, 3, 2, 2, 2, 138,
	38, 3, 2, 2, 2, 139, 137, 3, 2, 2, 2, 140, 145, 5, 29, 15, 2, 141, 144,
	5, 31, 16, 2, 142, 144, 5, 33, 17, 2, 143, 141, 3, 2, 2, 2, 143, 142, 3,
	2, 2, 2, 144, 147, 3, 2, 2, 2, 145, 143, 3, 2, 2, 2, 145, 146, 3, 2, 2,
	2, 146, 40, 3, 2, 2, 2, 147, 145, 3, 2, 2, 2, 148, 149, 7, 93, 2, 2, 149,
	42, 3, 2, 2, 2, 150, 151, 7, 95, 2, 2, 151, 44, 3, 2, 2, 2, 152, 154, 9,
	6, 2, 2, 153, 152, 3, 2, 2, 2, 154, 155, 3, 2, 2, 2, 155, 153, 3, 2, 2,
	2, 155, 156, 3, 2, 2, 2, 156, 157, 3, 2, 2, 2, 157, 158, 8, 23, 2, 2, 158,
	46, 3, 2, 2, 2, 159, 161, 7, 15, 2, 2, 160, 159, 3, 2, 2, 2, 160, 161,
	3, 2, 2, 2, 161, 162, 3, 2, 2, 2, 162, 165, 7, 12, 2, 2, 163, 165, 7, 15,
	2, 2, 164, 160, 3, 2, 2, 2, 164, 163, 3, 2, 2, 2, 165, 166, 3, 2, 2, 2,
	166, 164, 3, 2, 2, 2, 166, 167, 3, 2, 2, 2, 167, 168, 3, 2, 2, 2, 168,
	169, 8, 24, 2, 2, 169, 48, 3, 2, 2, 2, 170, 171, 7, 49, 2, 2, 171, 172,
	7, 44, 2, 2, 172, 176, 3, 2, 2, 2, 173, 175, 11, 2, 2, 2, 174, 173, 3,
	2, 2, 2, 175, 178, 3, 2, 2, 2, 176, 177, 3, 2, 2, 2, 176, 174, 3, 2, 2,
	2, 177, 179, 3, 2, 2, 2, 178, 176, 3, 2, 2, 2, 179, 180, 7, 44, 2, 2, 180,
	181, 7, 49, 2, 2, 181, 182, 3, 2, 2, 2, 182, 183, 8, 25, 2, 2, 183, 50,
	3, 2, 2, 2, 184, 185, 7, 49, 2, 2, 185, 186, 7, 49, 2, 2, 186, 190, 3,
	2, 2, 2, 187, 189, 10, 7, 2, 2, 188, 187, 3, 2, 2, 2, 189, 192, 3, 2, 2,
	2, 190, 188, 3, 2, 2, 2, 190, 191, 3, 2, 2, 2, 191, 193, 3, 2, 2, 2, 192,
	190, 3, 2, 2, 2, 193, 194, 8, 26, 2, 2, 194, 52, 3, 2, 2, 2, 13, 2, 135,
	137, 143, 145, 155, 160, 164, 166, 176, 190, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'options'", "'{'", "'}'", "'schema'", "'type'", "'ID'", "'int'", "'float'",
	"'string'", "'bool'", "'datetime'", "'geopoint'", "", "", "", "'['", "']'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "TypeIdentArray", "TypeIdent",
	"FieldIdent", "LBRACK", "RBRACK", "WS", "NEWLINE", "COMMENT", "LINE_COMMENT",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "ULetter", "LLetter", "Letter", "Digit", "TypeIdentArray",
	"TypeIdent", "FieldIdent", "LBRACK", "RBRACK", "WS", "NEWLINE", "COMMENT",
	"LINE_COMMENT",
}

type ConfigLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewConfigLexer(input antlr.CharStream) *ConfigLexer {

	l := new(ConfigLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Config.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ConfigLexer tokens.
const (
	ConfigLexerT__0           = 1
	ConfigLexerT__1           = 2
	ConfigLexerT__2           = 3
	ConfigLexerT__3           = 4
	ConfigLexerT__4           = 5
	ConfigLexerT__5           = 6
	ConfigLexerT__6           = 7
	ConfigLexerT__7           = 8
	ConfigLexerT__8           = 9
	ConfigLexerT__9           = 10
	ConfigLexerT__10          = 11
	ConfigLexerT__11          = 12
	ConfigLexerTypeIdentArray = 13
	ConfigLexerTypeIdent      = 14
	ConfigLexerFieldIdent     = 15
	ConfigLexerLBRACK         = 16
	ConfigLexerRBRACK         = 17
	ConfigLexerWS             = 18
	ConfigLexerNEWLINE        = 19
	ConfigLexerCOMMENT        = 20
	ConfigLexerLINE_COMMENT   = 21
)
